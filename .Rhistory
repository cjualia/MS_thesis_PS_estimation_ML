"gbm" = eps_GBM_B,
"cart" = eps_CART_B),
"C" = list("logreg" = eps_RL_C,
"rf" = eps_RF_C,
"gbm" = eps_GBM_C,
"cart" = eps_CART_C))
save(simple_estimations, file = "results/simple_estimations.rda")
View(simple_estimations)
simple_estimations <- list("A" = list("logreg" = data.frame("tps" = dfA$tps, "eps" = eps_RL_A),
"rf" = data.frame("tps" = dfA$tps, "eps" = eps_RF_A),
"gbm" = data.frame("tps" = dfA$tps, "eps" = eps_GBM_A),
"cart" = data.frame("tps" = dfA$tps, "eps" = eps_CART_A)),
"B" = list("logreg" = data.frame("tps" = dfB$tps, "eps" = eps_RL_B),
"rf" = data.frame("tps" = dfB$tps, "eps" = eps_RF_B),
"gbm" = data.frame("tps" = dfB$tps, "eps" = eps_GBM_B),
"cart" = data.frame("tps" = dfB$tps, "eps" = eps_CART_B)),
"C" = list("logreg" = data.frame("tps" = dfC$tps, "eps" = eps_RL_C),
"rf" = data.frame("tps" = dfC$tps, "eps" = eps_RF_C),
"gbm" = data.frame("tps" = dfC$tps, "eps" = eps_GBM_C),
"cart" = data.frame("tps" = dfC$tps, "eps" = eps_CART_C)))
save(simple_estimations, file = "results/simple_estimations.rda")
simple_estimations <- list("A" = list("logreg" = data.frame("Tr" = dfA$Tr, "tps" = dfA$tps, "eps" = eps_RL_A),
"rf" = data.frame("Tr" = dfA$Tr,"tps" = dfA$tps, "eps" = eps_RF_A),
"gbm" = data.frame("Tr" = dfA$Tr,"tps" = dfA$tps, "eps" = eps_GBM_A),
"cart" = data.frame("Tr" = dfA$Tr,"tps" = dfA$tps, "eps" = eps_CART_A)),
"B" = list("logreg" = data.frame("Tr" = dfB$Tr,"tps" = dfB$tps, "eps" = eps_RL_B),
"rf" = data.frame("Tr" = dfB$Tr,"tps" = dfB$tps, "eps" = eps_RF_B),
"gbm" = data.frame("Tr" = dfB$Tr,"tps" = dfB$tps, "eps" = eps_GBM_B),
"cart" = data.frame("Tr" = dfB$Tr,"tps" = dfB$tps, "eps" = eps_CART_B)),
"C" = list("logreg" = data.frame("Tr" = dfC$Tr,"tps" = dfC$tps, "eps" = eps_RL_C),
"rf" = data.frame("Tr" = dfC$Tr,"tps" = dfC$tps, "eps" = eps_RF_C),
"gbm" = data.frame("Tr" = dfC$Tr,"tps" = dfC$tps, "eps" = eps_GBM_C),
"cart" = data.frame("Tr" = dfC$Tr,"tps" = dfC$tps, "eps" = eps_CART_C)))
save(simple_estimations, file = "results/simple_estimations.rda")
View(simple_estimations)
View(simple_estimations)
View(simple_estimations)
violins <- function(scenario){
Tr = rep(simple_estimations[[scenario]]$rf, times = 4)
eps = c(simple_estimations[[scenario]]$logreg$eps,
simple_estimations[[scenario]]$rf$eps,
simple_estimations[[scenario]]$gbm$eps,
simple_estimations[[scenario]]$cart$eps)
method = rep(c("LR", "RF", "GBM", "CART"), each = length(simple_estimations[[scenario]]$rf))
df <- data.frame("Tr" = Tr, "eps" = eps, "method" = method)
return(df)
}
violins("A")
violins <- function(scenario){
Tr = rep(simple_estimations[[scenario]]$rf, times = 4)
eps = c(simple_estimations[[scenario]]$logreg$eps,
simple_estimations[[scenario]]$rf$eps,
simple_estimations[[scenario]]$gbm$eps,
simple_estimations[[scenario]]$cart$eps)
method = rep(c("LR", "RF", "GBM", "CART"), each = length(simple_estimations[[scenario]]$rf$eps))
df <- data.frame("Tr" = Tr, "eps" = eps, "method" = method)
return(df)
}
violins("A")
x <- violins("A")
View(x)
violins <- function(scenario){
Tr = rep(simple_estimations[[scenario]]$rf, times = 4)
eps = c(simple_estimations[[scenario]]$logreg$eps,
simple_estimations[[scenario]]$rf$eps,
simple_estimations[[scenario]]$gbm$eps,
simple_estimations[[scenario]]$cart$eps)
method = rep(c("LR", "RF", "GBM", "CART"), each = length(simple_estimations[[scenario]]$rf$eps))
df <- data.frame("Tr" = Tr, "eps" = eps, "method" = method)
return(df)
}
x <- violins("A")
View(x)
violins <- function(scenario) {
Tr = rep(simple_estimations[[scenario]]$rf$Tr, times = 4)
eps = c(simple_estimations[[scenario]]$logreg$eps,
simple_estimations[[scenario]]$rf$eps,
simple_estimations[[scenario]]$gbm$eps,
simple_estimations[[scenario]]$cart$eps)
method = rep(c("LR", "RF", "GBM", "CART"),
each = length(simple_estimations[[scenario]]$rf$eps))
df <- data.frame(Tr = Tr, eps = eps, method = method)
return(df)
}
x <- violins("A")
View(x)
head(x)
x$Tr <- factor(x$Tr, labels = c("No tratado", "Tratado"))
# Crear el plot
ggplot(x, aes(x = method, y = eps, fill = Tr)) +
geom_violin(position = position_dodge(width = 0.8), alpha = 0.7, trim = FALSE) +
labs(
x = NULL,
y = "Propensity Score estimado",
fill = NULL,
title = "Distribución de PS estimados por método y grupo de tratamiento"
) +
scale_fill_manual(
values = c("No tratado" = "#D3D3D3", "Tratado" = "#4682B4")
) +
theme_minimal() +
theme(
legend.position = "bottom",
axis.title.y = element_text(size = 11),
axis.text = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 13, face = "bold")
)
library(ggstatsplot)
install.packages("ggstatsplot")
library(ggstatsplot)
ggbetweenstats(
data = x,
x = Tr,                   # Grupos: No tratado vs Tratado
y = eps,                  # Propensity scores
grouping.var = method,    # Panel por método: RL, RF, GBM, CART
type = "parametric",      # o "nonparametric" si prefieres
violin.args = list(trim = FALSE),
results.subtitle = FALSE,
pairwise.display = "significant",  # solo muestra p-val significativos
palette = "Set2",
ggtheme = ggplot2::theme_minimal()
) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
axis.title = element_text(size = 11),
axis.text = element_text(size = 10),
strip.text = element_text(size = 12),  # títulos de paneles (métodos)
legend.position = "none"               # ya se sobreentiende el grupo
)
View(x)
View(x)
View(simple_estimations)
eps_distribution <- function(scenario) {
Tr = rep(simple_estimations[[scenario]]$rf$Tr, times = 4)
Tr <- factor(x$Tr, labels = c("No tratado", "Tratado"))
eps = c(simple_estimations[[scenario]]$logreg$eps,
simple_estimations[[scenario]]$rf$eps,
simple_estimations[[scenario]]$gbm$eps,
simple_estimations[[scenario]]$cart$eps)
method = rep(c("LR", "RF", "GBM", "CART"),
each = length(simple_estimations[[scenario]]$rf$eps))
df <- data.frame(Tr = Tr, eps = eps, method = method)
p <- ggplot(x, aes(x = method, y = eps, fill = Tr)) +
geom_boxplot(position = position_dodge(width = 0.75), width = 0.6, alpha = 0.8) +
scale_fill_manual(
values = c("No tratado" = "#006400",  # verde oscuro
"Tratado" = "#90EE90")     # verde clarito
) +
labs(
title = "Distribución de PS estimados por método y tratamiento",
x = NULL,
y = "Propensity Score estimado",
fill = NULL
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 13),
axis.text = element_text(size = 10),
axis.title.y = element_text(size = 11),
legend.position = "bottom"
)
return(p)
}
eps_distribution("A")
eps_distribution("B")
eps_distribution("C")
eps_distribution("B")
eps_distribution("A")
eps_distribution("B")
eps_distribution <- function(scenario) {
Tr = rep(simple_estimations[[scenario]]$rf$Tr, times = 4)
Tr <- factor(Tr, labels = c("No tratado", "Tratado"))
eps = c(simple_estimations[[scenario]]$logreg$eps,
simple_estimations[[scenario]]$rf$eps,
simple_estimations[[scenario]]$gbm$eps,
simple_estimations[[scenario]]$cart$eps)
method = rep(c("LR", "RF", "GBM", "CART"),
each = length(simple_estimations[[scenario]]$rf$eps))
df <- data.frame(Tr = Tr, eps = eps, method = method)
p <- ggplot(x, aes(x = method, y = eps, fill = Tr)) +
geom_boxplot(position = position_dodge(width = 0.75), width = 0.6, alpha = 0.8) +
scale_fill_manual(
values = c("No tratado" = "#006400",  # verde oscuro
"Tratado" = "#90EE90")     # verde clarito
) +
labs(
title = "Distribución de PS estimados por método y tratamiento",
x = NULL,
y = "Propensity Score estimado",
fill = NULL
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 13),
axis.text = element_text(size = 10),
axis.title.y = element_text(size = 11),
legend.position = "bottom"
)
return(p)
}
eps_distribution("B")
eps_distribution("C")
eps_distribution("B")
eps_distribution("A")
eps_distribution("C")
eps_distribution("C")
eps_distribution <- function(scenario) {
eps_distribution <- function(scenario) {
Tr = rep(simple_estimations[[scenario]]$rf$Tr, times = 4)
Tr <- factor(Tr, labels = c("No tratado", "Tratado"))
eps = c(simple_estimations[[scenario]]$logreg$eps,
simple_estimations[[scenario]]$rf$eps,
simple_estimations[[scenario]]$gbm$eps,
simple_estimations[[scenario]]$cart$eps)
method = rep(c("LR", "RF", "GBM", "CART"),
each = length(simple_estimations[[scenario]]$rf$eps))
df <- data.frame(Tr = Tr, eps = eps, method = method)
p <- ggplot(x, aes(x = eps, fill = Tr)) +
geom_density(alpha = 0.5) +
facet_wrap(~ method, ncol = 2) +
scale_fill_manual(values = c("No tratado" = "#006400", "Tratado" = "#90EE90")) +
labs(
title = "Distribución de propensity scores por método y tratamiento",
x = "Propensity score estimado",
y = "Densidad",
fill = NULL
) +
theme_minimal() +
theme(
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.text = element_text(size = 10),
legend.position = "bottom")
return(p)
}
eps_distribution("A")
eps_distribution <- function(scenario) {
Tr = rep(simple_estimations[[scenario]]$rf$Tr, times = 4)
Tr <- factor(Tr, labels = c("No tratado", "Tratado"))
eps = c(simple_estimations[[scenario]]$logreg$eps,
simple_estimations[[scenario]]$rf$eps,
simple_estimations[[scenario]]$gbm$eps,
simple_estimations[[scenario]]$cart$eps)
method = rep(c("LR", "RF", "GBM", "CART"),
each = length(simple_estimations[[scenario]]$rf$eps))
df <- data.frame(Tr = Tr, eps = eps, method = method)
p <- ggplot(x, aes(x = eps, fill = Tr)) +
geom_density(alpha = 0.5) +
facet_wrap(~ method, ncol = 2) +
scale_fill_manual(values = c("No tratado" = "#006400", "Tratado" = "#90EE90")) +
labs(
title = "Distribución de propensity scores por método y tratamiento",
x = "Propensity score estimado",
y = "Densidad",
fill = NULL
) +
theme_minimal() +
theme(
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.text = element_text(size = 10),
legend.position = "bottom")
return(p)
}
eps_distribution <- function(scenario) {
Tr = rep(simple_estimations[[scenario]]$rf$Tr, times = 4)
Tr <- factor(Tr, labels = c("No tratado", "Tratado"))
eps = c(simple_estimations[[scenario]]$logreg$eps,
simple_estimations[[scenario]]$rf$eps,
simple_estimations[[scenario]]$gbm$eps,
simple_estimations[[scenario]]$cart$eps)
method = rep(c("LR", "RF", "GBM", "CART"),
each = length(simple_estimations[[scenario]]$rf$eps))
df <- data.frame(Tr = Tr, eps = eps, method = method)
p <- ggplot(x, aes(x = eps, fill = Tr)) +
geom_density(alpha = 0.5) +
facet_wrap(~ method, ncol = 2) +
scale_fill_manual(values = c("No tratado" = "#006400", "Tratado" = "#90EE90")) +
labs(
title = "Distribución de propensity scores por método y tratamiento",
x = "Propensity score estimado",
y = "Densidad",
fill = NULL
) +
theme_minimal() +
theme(
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.text = element_text(size = 10),
legend.position = "bottom")
return(p)
}
eps_distribution <- function(scenario) {
Tr = rep(simple_estimations[[scenario]]$rf$Tr, times = 4)
Tr <- factor(Tr, labels = c("No tratado", "Tratado"))
eps = c(simple_estimations[[scenario]]$logreg$eps,
simple_estimations[[scenario]]$rf$eps,
simple_estimations[[scenario]]$gbm$eps,
simple_estimations[[scenario]]$cart$eps)
method = rep(c("LR", "RF", "GBM", "CART"),
each = length(simple_estimations[[scenario]]$rf$eps))
df <- data.frame(Tr = Tr, eps = eps, method = method)
p <- ggplot(df, aes(x = eps, fill = Tr)) +
geom_density(alpha = 0.5) +
facet_wrap(~ method, ncol = 2) +
scale_fill_manual(values = c("No tratado" = "#006400", "Tratado" = "#90EE90")) +
labs(
title = "Distribución de propensity scores por método y tratamiento",
x = "Propensity score estimado",
y = "Densidad",
fill = NULL
) +
theme_minimal() +
theme(
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.text = element_text(size = 10),
legend.position = "bottom"
)
return(p)
}
eps_distribution("A")
print("Hola")
>
eps_distribution <- function(scenario) {
Tr = rep(simple_estimations[[scenario]]$rf$Tr, times = 4)
Tr <- factor(Tr, labels = c("No tratado", "Tratado"))
eps = c(simple_estimations[[scenario]]$logreg$eps,
simple_estimations[[scenario]]$rf$eps,
simple_estimations[[scenario]]$gbm$eps,
simple_estimations[[scenario]]$cart$eps)
method = rep(c("LR", "RF", "GBM", "CART"),
each = length(simple_estimations[[scenario]]$rf$eps))
df <- data.frame(Tr = Tr, eps = eps, method = method)
p <- ggplot(df, aes(x = eps, fill = Tr)) +
geom_density(alpha = 0.5) +
facet_wrap(~ method, ncol = 2) +
scale_fill_manual(values = c("No tratado" = "#006400", "Tratado" = "#90EE90")) +
labs(
title = "Distribución de propensity scores por método y tratamiento",
x = "Propensity score estimado",
y = "Densidad",
fill = NULL
) +
theme_minimal() +
theme(
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.text = element_text(size = 10),
legend.position = "bottom"
)
return(p)
}
eps_distribution("A")
eps_distribution <- function(scenario) {
Tr = rep(simple_estimations[[scenario]]$rf$Tr, times = 4)
Tr <- factor(Tr, labels = c("No tratado", "Tratado"))
eps = c(simple_estimations[[scenario]]$logreg$eps,
simple_estimations[[scenario]]$rf$eps,
simple_estimations[[scenario]]$gbm$eps,
simple_estimations[[scenario]]$cart$eps)
method = rep(c("LR", "RF", "GBM", "CART"),
each = length(simple_estimations[[scenario]]$rf$eps))
df <- data.frame(Tr = Tr, eps = eps, method = method)
p <- ggplot(df, aes(x = eps, fill = Tr)) +
geom_density(alpha = 0.5) +
facet_wrap(~ method, ncol = 2, scales = "free_y") +
scale_fill_manual(values = c("No tratado" = "#006400", "Tratado" = "#90EE90")) +
labs(
title = "Distribución de propensity scores por método y tratamiento",
x = "Propensity score estimado",
y = "Densidad",
fill = NULL
) +
theme_minimal() +
theme(
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.text = element_text(size = 10),
legend.position = "bottom"
)
return(p)
}
eps_distribution("A")
eps_distribution <- function(scenario) {
Tr = rep(simple_estimations[[scenario]]$rf$Tr, times = 4)
Tr <- factor(Tr, labels = c("No tratado", "Tratado"))
eps = c(simple_estimations[[scenario]]$logreg$eps,
simple_estimations[[scenario]]$rf$eps,
simple_estimations[[scenario]]$gbm$eps,
simple_estimations[[scenario]]$cart$eps)
method = rep(c("LR", "RF", "GBM", "CART"),
each = length(simple_estimations[[scenario]]$rf$eps))
df <- data.frame(Tr = Tr, eps = eps, method = method)
p <- ggplot(df, aes(x = eps, fill = Tr)) +
geom_density(alpha = 0.5) +
facet_wrap(~ method, ncol = 2, scales = "free_y") +
scale_fill_manual(values = c("No tratado" = "#BF3EFF", "Tratado" = "#90EE90")) +
labs(
title = "Distribución de propensity scores por método y tratamiento",
x = "Propensity score estimado",
y = "Densidad",
fill = NULL
) +
theme_minimal() +
theme(
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.text = element_text(size = 10),
legend.position = "bottom"
)
return(p)
}
eps_distribution("A")
eps_distribution("B")
eps_distribution("C")
plot(x = simple_estimations$A$rf$tps, simple_estimations$A$rf$eps)
plot(x = simple_estimations$A$rf$tps, simple_estimations$A$rf$eps, col=simple_estimations$A$rf$Tr)
eps_distribution("C")
Fig1
library(caret)
library(randomForest)
library(gbm)
library(rpart)
library(MatchIt)
library(ipw)
library(cobalt)
library(ggplot2)
library(patchwork)
load("results/simple_estimations.rda")
eps_distribution <- function(scenario) {
Tr = rep(simple_estimations[[scenario]]$rf$Tr, times = 4)
Tr <- factor(Tr, labels = c("No tratado", "Tratado"))
eps = c(simple_estimations[[scenario]]$logreg$eps,
simple_estimations[[scenario]]$rf$eps,
simple_estimations[[scenario]]$gbm$eps,
simple_estimations[[scenario]]$cart$eps)
method = rep(c("LR", "RF", "GBM", "CART"),
each = length(simple_estimations[[scenario]]$rf$eps))
df <- data.frame(Tr = Tr, eps = eps, method = method)
p <- ggplot(df, aes(x = eps, fill = Tr)) +
geom_density(alpha = 0.5) +
facet_wrap(~ method, ncol = 2, scales = "free_y") +
scale_fill_manual(values = c("No tratado" = "#BF3EFF", "Tratado" = "#90EE90")) +
labs(
title = "Distribución de propensity scores por método y tratamiento",
x = "Propensity score estimado",
y = "Densidad",
fill = NULL
) +
theme_minimal() +
theme(
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.text = element_text(size = 10),
legend.position = "bottom"
)
return(p)
}
eps_distribution("C")
eps_distribution("A")
barplots <- function(scenario){
if (scenario == "A"){
results_m <- results_A_m
results_ipw <- results_A_w
} else if (scenario == "B"){
results_m <- results_B_m
results_ipw <- results_B_w
} else if (scenario == "C"){
results_m <- results_C_m
results_ipw <- results_C_w
} else if (scenario == "D"){
results_m <- results_D_m
results_ipw <- results_D_w
} else if (scenario == "E"){
results_m <- results_E_m
results_ipw <- results_E_w
}
df <- data.frame(
metodo = rep(c("LR", "RF", "GBM", "CART"), times = 2),
tipo = rep(c("IPW", "Matching"), each = 4),
asam = c(results_ipw$logr$asam_mean, results_ipw$rf$asam_mean,
results_ipw$gbm$asam_mean, results_ipw$cart$asam_mean,
results_m$logr$asam_mean, results_m$rf$asam_mean,
results_m$gbm$asam_mean, results_m$cart$asam_mean),
se = c(results_ipw$logr$asam_sd, results_ipw$rf$asam_sd,
results_ipw$gbm$asam_sd, results_ipw$cart$asam_sd,
results_m$logr$asam_sd, results_m$rf$asam_sd,
results_m$gbm$asam_sd, results_m$cart$asam_sd)/sqrt(100))
plot <- ggplot(df, aes(x = metodo, y = asam, fill = tipo)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
geom_errorbar(aes(ymin = asam - se, ymax = asam + se),
position = position_dodge(width = 0.7),
width = 0.2) +
labs(x = NULL, y = "ASAM", fill = NULL,
title = paste("Escenario ", scenario)) +
scale_fill_manual(values = c("IPW" = "#98F5FF", "Matching" = "#5F9EA0")) +
theme_minimal() +
theme(legend.position = "bottom",
axis.title = element_text(size = 9),
legend.text = element_text(size = 8),
legend.title = element_blank(),
plot.title = element_text(
size = 10,
hjust = 0.5))
return(plot)
}
barplots_results <- list("A" <- barplots("A"),
"B" <- barplots("B"),
"C" <- barplots("C"),
"D" <- barplots("D"),
"E" <- barplots("E"))
